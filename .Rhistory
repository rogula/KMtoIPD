library(survsim)
library(survminer)
generate_data = function(n, distn, distcens, seed, tmax = 80,
p1.anc.ev, p1.beta0.ev, p1.anc.cens, p1.beta0.cens,
p2.anc.ev, p2.beta0.ev, p2.anc.cens, p2.beta0.cens) {
set.seed(seed);
dat_c1 = simple.surv.sim(n, tmax, distn, anc.ev=p1.anc.ev, beta0.ev = p1.beta0.ev,
dist.cens = distcens,  anc.cens=p1.anc.cens, beta0.cens=p1.beta0.cens)
dat_c2 = simple.surv.sim(n, tmax, distn, anc.ev=p2.anc.ev, beta0.ev = p2.beta0.ev,
dist.cens = distcens,  anc.cens=p2.anc.cens, beta0.cens=p2.beta0.cens)
dat_c1$curve = 1; dat_c2$curve = 2;
dat0 = rbind(dat_c1, dat_c2);
dat = data.frame(t = dat0$stop, event = dat0$status, curve = dat0$curve, n=n, distribution=distn)
return(dat);
}
n = c(20,50,100,200);
### Loglogistic ###
dat = data.frame(t = NA, event = NA,
curve = NA)
dat_llogistic_n1 = generate_data(n = n[1], distn = "llogistic", distcens = "weibull", seed = 5, tmax = 80,p1.anc.ev=0.8, p1.beta0.ev = 3.8, p1.anc.cens=2, p1.beta0.cens=4,p2.anc.ev=1.2, p2.beta0.ev = 3, p2.anc.cens=2, p2.beta0.cens=4)
dat_llogistic_n2 = generate_data(n = n[2], distn = "llogistic", distcens = "weibull", seed = 120, tmax = 80,p1.anc.ev= 0.8, p1.beta0.ev = 3.8, p1.anc.cens=2, p1.beta0.cens=4,p2.anc.ev= 1.2, p2.beta0.ev = 3, p2.anc.cens=2, p2.beta0.cens=3.9)
dat_llogistic_n3 = generate_data(n = n[3], distn = "llogistic", distcens = "weibull", seed = 118, tmax = 80,p1.anc.ev=0.8, p1.beta0.ev = 3.8, p1.anc.cens=2, p1.beta0.cens=4.3,p2.anc.ev=1.2, p2.beta0.ev = 3, p2.anc.cens=2, p2.beta0.cens=4)
dat_llogistic_n4 = generate_data(n = n[4], distn = "llogistic", distcens = "weibull", seed = 126, tmax = 80,p1.anc.ev=0.8, p1.beta0.ev = 3.8, p1.anc.cens=1.5, p1.beta0.cens=5,p2.anc.ev=1.2, p2.beta0.ev = 3, p2.anc.cens=1.5, p2.beta0.cens=5)
### Lognormal ###
dat_lnorm_n1 = generate_data(n = n[1], distn = "lnorm", distcens = "weibull", seed = 2, tmax = 80,p1.anc.ev=2, p1.beta0.ev = 3.2, p1.anc.cens=2, p1.beta0.cens=4,p2.anc.ev=2, p2.beta0.ev = 2.5, p2.anc.cens=2, p2.beta0.cens=4)
dat_lnorm_n2 = generate_data(n = n[2], distn = "lnorm", distcens = "weibull", seed = 5, tmax = 80,p1.anc.ev=2, p1.beta0.ev = 3.2, p1.anc.cens=2, p1.beta0.cens=3.8,p2.anc.ev=2, p2.beta0.ev = 2.5, p2.anc.cens=2, p2.beta0.cens=3.8)
dat_lnorm_n3 = generate_data(n = n[3], distn = "lnorm", distcens = "weibull", seed = 126, tmax = 80,p1.anc.ev=2, p1.beta0.ev = 3.2, p1.anc.cens=2, p1.beta0.cens=4.5,p2.anc.ev=2, p2.beta0.ev = 2.5, p2.anc.cens=2, p2.beta0.cens=3.8)
dat_lnorm_n4 = generate_data(n = n[4], distn = "lnorm", distcens = "weibull", seed = 126, tmax = 80,p1.anc.ev=2, p1.beta0.ev = 3, p1.anc.cens=2, p1.beta0.cens=4.8,p2.anc.ev=2, p2.beta0.ev = 1, p2.anc.cens=2, p2.beta0.cens=3.8)
### Exponential ###
dat_weibull_n1 = generate_data(n = n[1], distn = "weibull", distcens = "weibull", seed = 2, tmax = 80,p1.anc.ev=1, p1.beta0.ev = 4.3, p1.anc.cens=2, p1.beta0.cens=3.8,p2.anc.ev=1, p2.beta0.ev = 3.5, p2.anc.cens=2, p2.beta0.cens=3.8)
dat_weibull_n2 = generate_data(n = n[2], distn = "weibull", distcens = "weibull", seed = 2, tmax = 80,p1.anc.ev=1, p1.beta0.ev = 4.3, p1.anc.cens=2, p1.beta0.cens=4.2,p2.anc.ev=1, p2.beta0.ev = 3.5, p2.anc.cens=2, p2.beta0.cens=3.9)
dat_weibull_n3 = generate_data(n = n[3], distn = "weibull", distcens = "weibull", seed = 4, tmax = 80,p1.anc.ev=1, p1.beta0.ev = 4.3, p1.anc.cens=2, p1.beta0.cens=4.2,p2.anc.ev=1, p2.beta0.ev = 3.5, p2.anc.cens=2, p2.beta0.cens=3.9)
dat_weibull_n4 = generate_data(n = n[4], distn = "weibull", distcens = "weibull", seed = 1, tmax = 80,p1.anc.ev=1, p1.beta0.ev = 4.3, p1.anc.cens=2, p1.beta0.cens=4.8,p2.anc.ev=1, p2.beta0.ev = 3.2, p2.anc.cens=2, p2.beta0.cens=4.2)
dat = rbind(dat_llogistic_n1, dat_llogistic_n2, dat_llogistic_n3, dat_llogistic_n4,
dat_lnorm_n1, dat_lnorm_n2, dat_lnorm_n3, dat_lnorm_n4,
dat_weibull_n1, dat_weibull_n2, dat_weibull_n3, dat_weibull_n4);
dat$curve = factor(dat$curve, levels=c(1,2))
dat$distribution = factor(dat$distribution, levels=c("llogistic","lnorm","weibull"), labels=c("Loglogistic","Lognormal","Exponential"))
dat$n = factor(dat$n, levels=n)
fit <- survfit(Surv(t, event) ~   n + curve, data = subset(dat, distribution=="Loglogistic"))
gg = ggsurvplot(fit, palette=rep(c("gray56","gray78"),18), data = subset(dat))
library(survival)
fit <- survfit(Surv(t, event) ~   n + curve, data = subset(dat, distribution=="Loglogistic"))
gg = ggsurvplot(fit, palette=rep(c("gray56","gray78"),18), data = subset(dat))
gg$plot + facet_wrap( ~ n);
fit <- survfit(Surv(t, event) ~   n + curve, data = subset(dat, distribution=="Loglogistic"))
gg = ggsurvplot(fit, palette=rep(c("gray56","gray78"),18), data = subset(dat)) + facet_wrap( ~ n);
fit <- survfit(Surv(t, event) ~   n + curve, data = subset(dat, distribution=="Loglogistic"))
gg = ggsurvplot(fit, palette=rep(c("gray56","gray78"),18), data = subset(dat))
gg$plot + facet_wrap( ~ n);
fit <- survfit(Surv(t, event) ~   n + curve, data = subset(dat, distribution=="Lognormal"))
gg = ggsurvplot(fit, palette=rep(c("gray56","gray78"),18), data = subset(dat))
gg$plot + facet_wrap( ~ n);
fit <- survfit(Surv(t, event) ~   n + curve, data = subset(dat, distribution=="Exponential"))
gg = ggsurvplot(fit, palette=rep(c("gray56","gray78"),18), data = subset(dat))
gg$plot + facet_wrap( ~ n);
devtools::install_github("rogula/PLDfromKM")
remove.packages("testthat)
install.packages("testthat")
remove.packages("testthat)
;
install.packages("testthat")
remove.packages("testthat)
;
remove.packages("testthat)
install.packages("testthat")
install.packages("testthat")
install.packages("testthat")
devtools::install_github("rogula/PLDfromKM")
devtools::install_github("rogula/PLDfromKM",force=TRUE)
setwd("C:/Users/Basia/Documents/GitHub/KMtoIPD/")
devtools::document()
